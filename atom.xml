<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>紫奈の肥宅屋</title>
  
  
  <link href="http://qingzinai.com/atom.xml" rel="self"/>
  
  <link href="http://qingzinai.com/"/>
  <updated>2021-05-13T00:50:45.475Z</updated>
  <id>http://qingzinai.com/</id>
  
  <author>
    <name>紫奈</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使你的git提交信息变得可爱</title>
    <link href="http://qingzinai.com/2021/05/13/gitmoji/"/>
    <id>http://qingzinai.com/2021/05/13/gitmoji/</id>
    <published>2021-05-13T00:41:37.665Z</published>
    <updated>2021-05-13T00:50:45.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于什么是gitmoji"><a href="#关于什么是gitmoji" class="headerlink" title="关于什么是gitmoji"></a>关于什么是gitmoji</h1><blockquote><p>Gitmoji 是一个 GitHub 提交信息的 emoji 指南。致力于成为一个标准化的备忘单 —— 在 GitHub 提交信息上使用 emoji 的指南。<br>在提交信息时使用 emoji提供了一种简单的方式来识别提交的目的和意图，只需要看一眼所使用的 emoji 就好了。因为有很多的 emoji，所以创建一份指南来让使用 emoji 变得轻松这件事就很有必要了。</p></blockquote><h2 id="gitmoji的用处"><a href="#gitmoji的用处" class="headerlink" title="gitmoji的用处"></a>gitmoji的用处</h2><blockquote><p>可以让你的commit能一目了然的知道这次更新了什么通过emoji的语义化甚至可以不加额外的信息</p></blockquote><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><blockquote><p>npm i -g gitmoji-cli</p></blockquote><h2 id="gitmoji表"><a href="#gitmoji表" class="headerlink" title="gitmoji表"></a>gitmoji表</h2><table><thead><tr><th>emoji</th><th>emoji code</th><th>desc</th></tr></thead><tbody><tr><td>🎨</td><td>:art:</td><td>Improving structure / format of the code.</td></tr><tr><td>⚡️</td><td>:zap:</td><td>Improving performance.</td></tr><tr><td>🔥</td><td>:fire:</td><td>Removing code or files.</td></tr><tr><td>🐛</td><td>:bug:</td><td>Fixing a bug.</td></tr><tr><td>🚑</td><td>:ambulance:</td><td>Critical hotfix.</td></tr><tr><td>✨</td><td>:sparkles:</td><td>Introducing new features.</td></tr><tr><td>📝</td><td>:pencil:</td><td>Writing docs.</td></tr><tr><td>🚀</td><td>:rocket:</td><td>Deploying stuff.</td></tr><tr><td>💄</td><td>:lipstick:</td><td>Updating the UI and style files.</td></tr><tr><td>🎉</td><td>:tada:</td><td>Initial commit.</td></tr><tr><td>✅</td><td>:white_check_mark:</td><td>Updating tests.</td></tr><tr><td>🔒</td><td>:lock:</td><td>Fixing security issues.</td></tr><tr><td>🍎</td><td>:apple:</td><td>Fixing something on macOS.</td></tr><tr><td>🐧</td><td>:penguin:</td><td>Fixing something on Linux.</td></tr><tr><td>🏁</td><td>:checkered_flag:</td><td>Fixing something on Windows.</td></tr><tr><td>🤖</td><td>:robot:</td><td>Fixing something on Android.</td></tr><tr><td>🍏</td><td>:green_apple:</td><td>Fixing something on iOS.</td></tr><tr><td>🔖</td><td>:bookmark:</td><td>Releasing / Version tags.</td></tr><tr><td>🚨</td><td>:rotating_light:</td><td>Removing linter warnings.</td></tr><tr><td>🚧</td><td>:construction:</td><td>Work in progress.</td></tr><tr><td>💚</td><td>:green_heart:</td><td>Fixing CI Build.</td></tr><tr><td>⬆️</td><td>:arrow_up:</td><td>Upgrading dependencies.</td></tr><tr><td>⬇️</td><td>:arrow_down:</td><td>Downgrading dependencies.</td></tr><tr><td>📌</td><td>:pushpin:</td><td>Pinning dependencies to specific versions.</td></tr><tr><td>👷</td><td>:construction_worker:</td><td>Adding CI build system.</td></tr><tr><td>📈</td><td>:chart_with_upwards_trend:</td><td>Adding analytics or tracking code.</td></tr><tr><td>♻️</td><td>:recycle:</td><td>Refactoring code.</td></tr><tr><td>🐳</td><td>:whale:</td><td>Work about Docker.</td></tr><tr><td>➕</td><td>:heavy_plus_sign:</td><td>Adding a dependency.</td></tr><tr><td>➖</td><td>:heavy_minus_sign:</td><td>Removing a dependency.</td></tr><tr><td>🔧</td><td>:wrench:</td><td>Changing configuration files.</td></tr><tr><td>🌐</td><td>:globe_with_meridians:</td><td>Internationalization and localization.</td></tr><tr><td>✏️</td><td>:pencil2:</td><td>Fixing typos.</td></tr><tr><td>💩</td><td>:poop:</td><td>Writing bad code that needs to be improved.</td></tr><tr><td>⏪</td><td>:rewind:</td><td>Reverting changes.</td></tr><tr><td>🔀</td><td>:twisted_rightwards_arrows:</td><td>Merging branches.</td></tr><tr><td>📦</td><td>:package:</td><td>Updating compiled files or packages.</td></tr><tr><td>👽</td><td>:alien:</td><td>Updating code due to external API changes.</td></tr><tr><td>🚚</td><td>:truck:</td><td>Moving or renaming files.</td></tr><tr><td>📄</td><td>:page_facing_up:</td><td>Adding or updating license.</td></tr><tr><td>💥</td><td>:boom:</td><td>Introducing breaking changes.</td></tr><tr><td>🍱</td><td>:bento:</td><td>Adding or updating assets.</td></tr><tr><td>👌</td><td>:ok_hand:</td><td>Updating code due to code review changes.</td></tr><tr><td>♿️</td><td>:wheelchair:</td><td>Improving accessibility.</td></tr><tr><td>💡</td><td>:bulb:</td><td>Documenting source code.</td></tr><tr><td>🍻</td><td>:beers:</td><td>Writing code drunkenly.</td></tr><tr><td>💬</td><td>:speech_balloon:</td><td>Updating text and literals.</td></tr><tr><td>🗃</td><td>:card_file_box:</td><td>Performing database related changes.</td></tr><tr><td>🔊</td><td>:loud_sound:</td><td>Adding logs.</td></tr><tr><td>🔇</td><td>:mute:</td><td>Removing logs.</td></tr><tr><td>👥</td><td>:busts_in_silhouette:</td><td>Adding contributor(s).</td></tr><tr><td>🚸</td><td>:children_crossing:</td><td>Improving user experience / usability.</td></tr><tr><td>🏗</td><td>:building_construction:</td><td>Making architectural changes.</td></tr><tr><td>📱</td><td>:iphone:</td><td>Working on responsive design.</td></tr><tr><td>🤡</td><td>:clown_face:</td><td>Mocking things.</td></tr><tr><td>🥚</td><td>:egg:</td><td>Adding an easter egg.</td></tr><tr><td>🙈</td><td>:see_no_evil:</td><td>Adding or updating a .gitignore file</td></tr><tr><td>📸</td><td>:camera_flash:</td><td>Adding or updating snapshots</td></tr><tr><td>⚗</td><td>:alembic:</td><td>Experimenting new things</td></tr><tr><td>🔍</td><td>:mag:</td><td>Improving SEO</td></tr><tr><td>☸️</td><td>:wheel_of_dharma:</td><td>Work about Kubernetes</td></tr><tr><td>🏷️</td><td>:label:</td><td>Adding or updating types (Flow, TypeScript)</td></tr><tr><td>🌱</td><td>:seedling:</td><td>Adding or updating seed files</td></tr><tr><td>🚩</td><td>:triangular_flag_on_post:</td><td>Adding, updating, or removing feature flags</td></tr><tr><td>💫</td><td>:dizzy:</td><td>Adding or updating animations and transitions</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于什么是gitmoji&quot;&gt;&lt;a href=&quot;#关于什么是gitmoji&quot; class=&quot;headerlink&quot; title=&quot;关于什么是gitmoji&quot;&gt;&lt;/a&gt;关于什么是gitmoji&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Gitmoji 是一个 GitHu</summary>
      
    
    
    
    <category term="紫奈的技术分享" scheme="http://qingzinai.com/categories/%E7%B4%AB%E5%A5%88%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="git" scheme="http://qingzinai.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>关于如何搭建一个github图床并用PicGo管理</title>
    <link href="http://qingzinai.com/2021/01/26/PicGo-github-images/"/>
    <id>http://qingzinai.com/2021/01/26/PicGo-github-images/</id>
    <published>2021-01-26T08:28:03.862Z</published>
    <updated>2021-05-13T00:46:15.051Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于如何搭建一个github图床并用PicGo管理"><a href="#关于如何搭建一个github图床并用PicGo管理" class="headerlink" title="关于如何搭建一个github图床并用PicGo管理"></a>关于如何搭建一个github图床并用PicGo管理</h1><h2 id="什么是图床"><a href="#什么是图床" class="headerlink" title="什么是图床"></a>什么是图床</h2><blockquote><p>图床，就是指一些可以把图片存放到自己或者第三方并且引用到其他网站使用的服务，就像以前的网络相册。</p></blockquote><h2 id="图床的好处"><a href="#图床的好处" class="headerlink" title="图床的好处"></a>图床的好处</h2><ol><li>节约存储成本</li><li>可以在有网络的时候随时访问</li><li>可以使用免费的第三方加速服务</li></ol><h2 id="本次教程的优点"><a href="#本次教程的优点" class="headerlink" title="本次教程的优点"></a>本次教程的优点</h2><blockquote><p>这次我所用的服务和工具都属于开源服务，点一下玩一年不花一分钱。下面让我们开始图床的搭建。</p></blockquote><h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><blockquote><p>本次教程针对有一定基础的同学，我没有写在教程里的东西在网上都有。<br>github可能会显示图片裂开的情况,可以科学上网或者改hosts 这里就不写如何解决。</p></blockquote><h3 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h3><ol><li>首先你需要登录自己的github创建一个新的库<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/20210126165151.png" alt="avatar" loading="lazy"></li><li>然后填写你的库资料，自己加描述<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122010052-449120149.png" alt="avatar" loading="lazy"></li><li>成功后会显示下面页面<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/WX20210126-165633@2x.png" alt="avatar" loading="lazy"></li></ol><h3 id="使用jsDelivr加速"><a href="#使用jsDelivr加速" class="headerlink" title="使用jsDelivr加速"></a>使用jsDelivr加速</h3><blockquote><p>因为github是国外网站所以图片加载可能很慢，这里就需要用第三方的cdn加速，我这里用的是jsDelivr,有其他加速的同学们也可以用自己的加速服务。<br>使用方法，非常简单，即把图片地址链接域名改为 CDN 的域名。格式如下：<br><a href="https://cdn.jsdelivr.net/gh/">https://cdn.jsdelivr.net/gh/</a>&lt;你的github用户名&gt;/&lt;你的图床仓库名&gt;@&lt;仓库版本号&gt;/图片的路径<br>这里的版本号指的是分支名以前github默认为masrter现在是main不要搞错<br>这里放出一份改完后的图片地址:<a href="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/WX20210126-165633@2x.png">https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/WX20210126-165633@2x.png</a><br>其他说明，可参考 jsDelivr 官网介绍</p></blockquote><h3 id="创建github图床Token"><a href="#创建github图床Token" class="headerlink" title="创建github图床Token"></a>创建github图床Token</h3><ol><li>首先你需要创建一个token<blockquote><p>点击右上角账号上的 settings<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122010906-24503404.png" alt="avatar" loading="lazy"><br>然后左侧点击 developer settings ，再点击 personal access tokens ，然后点击 generate new token。<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122011123-386794180.png" alt="avatar" loading="lazy"><br>最后说明自己创建token的用途,然后 scopes 只需要选 repo 的所有选项即可<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122011409-863250092.png" alt="avatar" loading="lazy"><br>拉到底部，点击 generate token ，即可成功。<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122011668-1781832056.png" alt="avatar" loading="lazy"><br>最后一定要记住自己生成的token<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/1714084-20201031122011850-1358770775.png" alt="avatar" loading="lazy"></p></blockquote></li></ol><h3 id="使用PicGo对图床进行管理"><a href="#使用PicGo对图床进行管理" class="headerlink" title="使用PicGo对图床进行管理"></a>使用PicGo对图床进行管理</h3><blockquote><p>PicGo是github一个开源的图床管理工具 <a href="https://github.com/Molunerfinn/PicGo">PicGo下载地址</a><br>在 PicGo 中，找到图床设置 -&gt; GitHub图床。<br>仓库名即为你的github账号/图片仓库名<br>分支名就用默认的 main<br>Token 就填写刚才我们生成的 Token<br>存储路径如果需要指定子目录可以填写例如 img/ 。我这里没有填，就会上传到我图片仓库的根目录。<br>自定义域名就填写 jsDelivr 的域名，即图片访问地址，不包括图片路径的前半部分，我这里就是 <a href="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main%E3%80%82">https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main。</a><br>最后设为默认图床，下次在 typora 上传图片就会自动上传到 github 图床了。<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/WX20210126-171805@2x.png" alt="avatar" loading="lazy"></p></blockquote><h3 id="使用插件同步github图床"><a href="#使用插件同步github图床" class="headerlink" title="使用插件同步github图床"></a>使用插件同步github图床</h3><blockquote><p>也许会有人问如果我github删除了图片PicGo不就和github不同步了吗？<br>这里我提供一个解决方法,PicGo拥有丰富的插件系统可以解决<br>在PicGo插件设置里搜索github-plus<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/WX20210126-172255@2x.png" alt="avatar" loading="lazy"><br>安装完成后点击配置uploder-githubPlus<br>按照下图把仓库信息填写进去<br><img src="https://cdn.jsdelivr.net/gh/qingzinai/qingzinai-image@main/AC17B77F-07C4-471E-B479-D3480E17DA15.png" alt="avatar" loading="lazy"><br>然后点击 pull origin 就可以同步仓库了<br>更多使用详情请参考插件开发者的文档 <a href="https://github.com/zWingz/picgo-plugin-github-plus">插件文档地址</a></p></blockquote><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><blockquote><p>以上就是创建图床的全部教程如果遇到困难可以在下方的评论系统提出。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于如何搭建一个github图床并用PicGo管理&quot;&gt;&lt;a href=&quot;#关于如何搭建一个github图床并用PicGo管理&quot; class=&quot;headerlink&quot; title=&quot;关于如何搭建一个github图床并用PicGo管理&quot;&gt;&lt;/a&gt;关于如何搭建一个git</summary>
      
    
    
    
    <category term="紫奈的技术分享" scheme="http://qingzinai.com/categories/%E7%B4%AB%E5%A5%88%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="图床" scheme="http://qingzinai.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>何为二刺猿</title>
    <link href="http://qingzinai.com/2021/01/13/Two-spiny-ape-notes-01/"/>
    <id>http://qingzinai.com/2021/01/13/Two-spiny-ape-notes-01/</id>
    <published>2021-01-13T07:57:54.786Z</published>
    <updated>2021-01-13T08:23:08.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是二刺猿"><a href="#什么是二刺猿" class="headerlink" title="什么是二刺猿"></a>什么是二刺猿</h1><blockquote><p>二刺猿”这个词从字面上来看是“二次元”的谐音,那什么是二次元呢？<br>以前的二次元多泛指喜欢动漫喜欢游戏的一群同好者<br>现在的叫二刺猿也是指喜欢游戏动漫的爱好者<br>那就有人会奇怪了这不是没变吗？<br>下面我们从更加细节的方面如说话行为等一起帮你识别两者的区别</p></blockquote><h2 id="说话方式的不同"><a href="#说话方式的不同" class="headerlink" title="说话方式的不同"></a>说话方式的不同</h2><blockquote><p>二刺猿:桥都麻袋，这样子讲话有什么错吗？呐，告诉我啊。搜噶，你们已经不喜欢了啊…真是冷酷的人呢， 果咩纳塞， 让你看到不愉快的东西了。像我这样的人，果然消失就好了呢。也许只有在二次元的世界里，才有真正的美好存在的吧，呐？<br>二次元:我不是你们说的那个二次元啦，我只是看看番罢了，游戏也只是打发时间而已，果然现实的交往对我还是太难了。</p></blockquote><h2 id="喜欢作品类型的不同"><a href="#喜欢作品类型的不同" class="headerlink" title="喜欢作品类型的不同"></a>喜欢作品类型的不同</h2><blockquote><p>二次元:喜欢有深度剧情展开比较大，人物智商在线的作品，比如剑风传奇，EVA等<br>二刺猿:主角秒天秒地，剧情不重要但是一定要爽，女主见面倒贴，没女主那就男二倒贴</p></blockquote><h2 id="年龄"><a href="#年龄" class="headerlink" title="年龄"></a>年龄</h2><blockquote><p>二次元:现在说的二次元大多指上个世纪8 90年代的人,在那个精神条件比较匮乏的年代，恰逢日本动漫业空前的盛况，中日关系友好大范围引进动漫在地方台甚至中央台播出,基本上大家都从电视看过蜡笔小新,樱桃小丸子,龙神斗士等.<br>二刺猿:多指00后由于出生在信息爆炸的年代，随着智能机的以及电脑的普及从小就开始了看番的习惯，看东西比起喜欢更在乎有没有热度，这样就可以和朋友进行讨论.</p></blockquote><h2 id="认同感"><a href="#认同感" class="headerlink" title="认同感"></a>认同感</h2><blockquote><p>二刺猿:今生不生二刺猿，来世愿生幻想乡.<br>二次元:关于二次元很恶心这点我还是知道的,别骂了别骂了。</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>通过这些对比大家明白了吧，二次元就是二刺猿的进化体,大家快去对照身边的朋友判断他处于哪一阶段吧,记得说句二次元真恶心(我开玩笑的)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是二刺猿&quot;&gt;&lt;a href=&quot;#什么是二刺猿&quot; class=&quot;headerlink&quot; title=&quot;什么是二刺猿&quot;&gt;&lt;/a&gt;什么是二刺猿&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;二刺猿”这个词从字面上来看是“二次元”的谐音,那什么是二次元呢？&lt;br&gt;以前的二次</summary>
      
    
    
    
    <category term="二刺猿随笔" scheme="http://qingzinai.com/categories/%E4%BA%8C%E5%88%BA%E7%8C%BF%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="二刺猿" scheme="http://qingzinai.com/tags/%E4%BA%8C%E5%88%BA%E7%8C%BF/"/>
    
  </entry>
  
  <entry>
    <title>关于个人网站</title>
    <link href="http://qingzinai.com/2020/09/04/hello-world/"/>
    <id>http://qingzinai.com/2020/09/04/hello-world/</id>
    <published>2020-09-04T08:25:21.345Z</published>
    <updated>2020-09-10T01:33:25.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网站日志"><a href="#网站日志" class="headerlink" title="网站日志"></a>网站日志</h1><blockquote><p>网站是由hexo加云游君的yun主题建设而成,云游君yyds，喜欢本网站的可以去云游君的个人网站或者主题网站看看.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网站日志&quot;&gt;&lt;a href=&quot;#网站日志&quot; class=&quot;headerlink&quot; title=&quot;网站日志&quot;&gt;&lt;/a&gt;网站日志&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;网站是由hexo加云游君的yun主题建设而成,云游君yyds，喜欢本网站的可以去云游君的个人网站或</summary>
      
    
    
    
    <category term="建站相关" scheme="http://qingzinai.com/categories/%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="建站记录" scheme="http://qingzinai.com/tags/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
